package Communication;

import java.io.DataInputStream;
import java.io.DataOutputStream;
import java.io.InputStream;
import java.io.OutputStream;
import java.net.Socket;

public class ClientTcp {

    private Socket soc;
    private OutputStream out;
    private DataOutputStream dos;
    private InputStream in;
    private DataInputStream dis;
    private boolean estConnectÃ©;
    private byte[] trame_reponse;

    public ClientTcp() {
        // <editor-fold defaultstate="collapsed" desc="Compiled Code">
        /* 0: aload_0
         * 1: invokespecial java/lang/Object."<init>":()V
         * 4: aload_0
         * 5: iconst_0
         * 6: putfield      Communication/ClientTcp.estConnectÃ©:Z
         * 9: return
         *  */
        // </editor-fold>
    }

    public boolean se_connecter(String IP, int port) {
        // <editor-fold defaultstate="collapsed" desc="Compiled Code">
        /* 0: aload_0
         * 1: new           java/net/Socket
         * 4: dup
         * 5: aload_1
         * 6: iload_2
         * 7: invokespecial java/net/Socket."<init>":(Ljava/lang/String;I)V
         * 10: putfield      Communication/ClientTcp.soc:Ljava/net/Socket;
         * 13: aload_0
         * 14: aload_0
         * 15: getfield      Communication/ClientTcp.soc:Ljava/net/Socket;
         * 18: invokevirtual java/net/Socket.getOutputStream:()Ljava/io/OutputStream;
         * 21: putfield      Communication/ClientTcp.out:Ljava/io/OutputStream;
         * 24: aload_0
         * 25: new           java/io/DataOutputStream
         * 28: dup
         * 29: aload_0
         * 30: getfield      Communication/ClientTcp.out:Ljava/io/OutputStream;
         * 33: invokespecial java/io/DataOutputStream."<init>":(Ljava/io/OutputStream;)V
         * 36: putfield      Communication/ClientTcp.dos:Ljava/io/DataOutputStream;
         * 39: aload_0
         * 40: aload_0
         * 41: getfield      Communication/ClientTcp.soc:Ljava/net/Socket;
         * 44: invokevirtual java/net/Socket.getInputStream:()Ljava/io/InputStream;
         * 47: putfield      Communication/ClientTcp.in:Ljava/io/InputStream;
         * 50: aload_0
         * 51: new           java/io/DataInputStream
         * 54: dup
         * 55: aload_0
         * 56: getfield      Communication/ClientTcp.in:Ljava/io/InputStream;
         * 59: invokespecial java/io/DataInputStream."<init>":(Ljava/io/InputStream;)V
         * 62: putfield      Communication/ClientTcp.dis:Ljava/io/DataInputStream;
         * 65: goto          84
         * 68: astore_3
         * 69: aload_0
         * 70: iconst_0
         * 71: putfield      Communication/ClientTcp.estConnectÃ©:Z
         * 74: iconst_0
         * 75: ireturn
         * 76: astore_3
         * 77: aload_0
         * 78: iconst_0
         * 79: putfield      Communication/ClientTcp.estConnectÃ©:Z
         * 82: iconst_0
         * 83: ireturn
         * 84: aload_0
         * 85: iconst_1
         * 86: putfield      Communication/ClientTcp.estConnectÃ©:Z
         * 89: iconst_1
         * 90: ireturn
         * Exception table:
         * from    to  target type
         * 0    65    68   Class java/net/UnknownHostException
         * 0    65    76   Class java/io/IOException
         *  */
        // </editor-fold>
    }

    public boolean envoyer_octets(byte[] trame) {
        // <editor-fold defaultstate="collapsed" desc="Compiled Code">
        /* 0: aload_0
         * 1: getfield      Communication/ClientTcp.dos:Ljava/io/DataOutputStream;
         * 4: aload_1
         * 5: iconst_0
         * 6: aload_1
         * 7: arraylength
         * 8: invokevirtual java/io/DataOutputStream.write:([BII)V
         * 11: goto          17
         * 14: astore_2
         * 15: iconst_0
         * 16: ireturn
         * 17: iconst_1
         * 18: ireturn
         * Exception table:
         * from    to  target type
         * 0    11    14   Class java/io/IOException
         *  */
        // </editor-fold>
    }

    public boolean recevoir_octets() {
        // <editor-fold defaultstate="collapsed" desc="Compiled Code">
        /* 0: sipush        200
         * 3: newarray       byte
         * 5: astore_1
         * 6: aload_0
         * 7: getfield      Communication/ClientTcp.dis:Ljava/io/DataInputStream;
         * 10: aload_1
         * 11: invokevirtual java/io/DataInputStream.read:([B)I
         * 14: istore_2
         * 15: aload_0
         * 16: iload_2
         * 17: newarray       byte
         * 19: putfield      Communication/ClientTcp.trame_reponse:[B
         * 22: aload_1
         * 23: iconst_0
         * 24: aload_0
         * 25: getfield      Communication/ClientTcp.trame_reponse:[B
         * 28: iconst_0
         * 29: iload_2
         * 30: invokestatic  java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
         * 33: goto          39
         * 36: astore_2
         * 37: iconst_0
         * 38: ireturn
         * 39: iconst_1
         * 40: ireturn
         * Exception table:
         * from    to  target type
         * 6    33    36   Class java/io/IOException
         *  */
        // </editor-fold>
    }

    public byte[] getTrame_reponse() {
        // <editor-fold defaultstate="collapsed" desc="Compiled Code">
        /* 0: aload_0
         * 1: getfield      Communication/ClientTcp.trame_reponse:[B
         * 4: areturn
         *  */
        // </editor-fold>
    }

    public boolean se_deconnecter() {
        // <editor-fold defaultstate="collapsed" desc="Compiled Code">
        /* 0: aload_0
         * 1: getfield      Communication/ClientTcp.soc:Ljava/net/Socket;
         * 4: invokevirtual java/net/Socket.close:()V
         * 7: aload_0
         * 8: iconst_0
         * 9: putfield      Communication/ClientTcp.estConnectÃ©:Z
         * 12: goto          18
         * 15: astore_1
         * 16: iconst_0
         * 17: ireturn
         * 18: iconst_1
         * 19: ireturn
         * Exception table:
         * from    to  target type
         * 0    12    15   Class java/io/IOException
         *  */
        // </editor-fold>
    }

    public boolean getestConnectÃ©() {
        // <editor-fold defaultstate="collapsed" desc="Compiled Code">
        /* 0: aload_0
         * 1: getfield      Communication/ClientTcp.estConnectÃ©:Z
         * 4: ireturn
         *  */
        // </editor-fold>
    }
}
